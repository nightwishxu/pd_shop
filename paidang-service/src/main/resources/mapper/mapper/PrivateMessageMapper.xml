<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.PrivateMessageMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.PrivateMessage" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="member_id" property="memberId" jdbcType="INTEGER" />
        <result column="friend_id" property="friendId" jdbcType="INTEGER" />
        <result column="sender_id" property="senderId" jdbcType="INTEGER" />
        <result column="receiver_id" property="receiverId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="message_type" property="messageType" jdbcType="INTEGER" />
        <result column="message_content" property="messageContent" jdbcType="VARCHAR" />
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,member_id,friend_id,sender_id,receiver_id,type,message_type,message_content,send_time,status,delete_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_private_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from t_private_message
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from t_private_message
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from t_private_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into t_private_message (member_id,friend_id,
        sender_id,receiver_id,type,
        message_type,message_content,send_time,
        status,delete_time
        )
        values (#{memberId,jdbcType=INTEGER},#{friendId,jdbcType=INTEGER},
        #{senderId,jdbcType=INTEGER},#{receiverId,jdbcType=INTEGER},#{type,jdbcType=INTEGER},
        #{messageType,jdbcType=INTEGER},#{messageContent,jdbcType=VARCHAR},#{sendTime,jdbcType=TIMESTAMP},
        #{status,jdbcType=INTEGER},#{deleteTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into t_private_message
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="memberId != null" >
                member_id,
            </if>
            <if test="friendId != null" >
                friend_id,
            </if>
            <if test="senderId != null" >
                sender_id,
            </if>
            <if test="receiverId != null" >
                receiver_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="messageType != null" >
                message_type,
            </if>
            <if test="messageContent != null" >
                message_content,
            </if>
            <if test="sendTime != null" >
                send_time,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="deleteTime != null" >
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="memberId != null" >
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null" >
                #{friendId,jdbcType=INTEGER},
            </if>
            <if test="senderId != null" >
                #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null" >
                #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                #{type,jdbcType=INTEGER},
            </if>
            <if test="messageType != null" >
                #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null" >
                #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null" >
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="deleteTime != null" >
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from t_private_message
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update t_private_message
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.memberId != null" >
                member_id = #{record.memberId,jdbcType=INTEGER},
            </if>
            <if test="record.friendId != null" >
                friend_id = #{record.friendId,jdbcType=INTEGER},
            </if>
            <if test="record.senderId != null" >
                sender_id = #{record.senderId,jdbcType=INTEGER},
            </if>
            <if test="record.receiverId != null" >
                receiver_id = #{record.receiverId,jdbcType=INTEGER},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.messageType != null" >
                message_type = #{record.messageType,jdbcType=INTEGER},
            </if>
            <if test="record.messageContent != null" >
                message_content = #{record.messageContent,jdbcType=VARCHAR},
            </if>
            <if test="record.sendTime != null" >
                send_time = #{record.sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.deleteTime != null" >
                delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update t_private_message
        set id = #{id,jdbcType=INTEGER},
        member_id = #{memberId,jdbcType=INTEGER},
        friend_id = #{friendId,jdbcType=INTEGER},
        sender_id = #{senderId,jdbcType=INTEGER},
        receiver_id = #{receiverId,jdbcType=INTEGER},
        type = #{type,jdbcType=INTEGER},
        message_type = #{messageType,jdbcType=INTEGER},
        message_content = #{messageContent,jdbcType=VARCHAR},
        send_time = #{sendTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER},
        delete_time = #{deleteTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update t_private_message
        <set >
            <if test="memberId != null" >
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="friendId != null" >
                friend_id = #{friendId,jdbcType=INTEGER},
            </if>
            <if test="senderId != null" >
                sender_id = #{senderId,jdbcType=INTEGER},
            </if>
            <if test="receiverId != null" >
                receiver_id = #{receiverId,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="messageType != null" >
                message_type = #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null" >
                message_content = #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null" >
                send_time = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="deleteTime != null" >
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update t_private_message
        set member_id = #{memberId,jdbcType=INTEGER},
        friend_id = #{friendId,jdbcType=INTEGER},
        sender_id = #{senderId,jdbcType=INTEGER},
        receiver_id = #{receiverId,jdbcType=INTEGER},
        type = #{type,jdbcType=INTEGER},
        message_type = #{messageType,jdbcType=INTEGER},
        message_content = #{messageContent,jdbcType=VARCHAR},
        send_time = #{sendTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER},
        delete_time = #{deleteTime,jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from t_private_message
        ${sqlSegment}
    </select>

</mapper>