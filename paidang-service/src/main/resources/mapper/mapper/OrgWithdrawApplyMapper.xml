<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.OrgWithdrawApplyMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.OrgWithdrawApply" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="org_id" property="orgId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="trade_type" property="tradeType" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_account" property="createAccount" jdbcType="VARCHAR" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="modify_account" property="modifyAccount" jdbcType="VARCHAR" />
        <result column="bank_card_no" property="bankCardNo" jdbcType="VARCHAR" />
        <result column="bank_card_name" property="bankCardName" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,org_id,user_id,amount,status,trade_type,create_time,create_account,modify_time,modify_account,bank_card_no,bank_card_name
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from p_org_withdraw_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from p_org_withdraw_apply
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from p_org_withdraw_apply
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from p_org_withdraw_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into p_org_withdraw_apply (org_id,user_id,
        amount,status,trade_type,
        create_time,create_account,modify_time,
        modify_account,bank_card_no,bank_card_name
        )
        values (#{orgId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},
        #{amount,jdbcType=DECIMAL},#{status,jdbcType=INTEGER},#{tradeType,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP},#{createAccount,jdbcType=VARCHAR},#{modifyTime,jdbcType=TIMESTAMP},
        #{modifyAccount,jdbcType=VARCHAR},#{bankCardNo,jdbcType=VARCHAR},#{bankCardName,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into p_org_withdraw_apply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orgId != null" >
                org_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="amount != null" >
                amount,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="tradeType != null" >
                trade_type,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="createAccount != null" >
                create_account,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="modifyAccount != null" >
                modify_account,
            </if>
            <if test="bankCardNo != null" >
                bank_card_no,
            </if>
            <if test="bankCardName != null" >
                bank_card_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orgId != null" >
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null" >
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="tradeType != null" >
                #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createAccount != null" >
                #{createAccount,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyAccount != null" >
                #{modifyAccount,jdbcType=VARCHAR},
            </if>
            <if test="bankCardName != null" >
                #{bankCardName,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null" >
                #{bankCardNo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from p_org_withdraw_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update p_org_withdraw_apply
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orgId != null" >
                org_id = #{record.orgId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.amount != null" >
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.tradeType != null" >
                trade_type = #{record.tradeType,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createAccount != null" >
                create_account = #{record.createAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyTime != null" >
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyAccount != null" >
                modify_account = #{record.modifyAccount,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update p_org_withdraw_apply
        set id = #{id,jdbcType=INTEGER},
        org_id = #{orgId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        amount = #{amount,jdbcType=DECIMAL},
        status = #{status,jdbcType=INTEGER},
        trade_type = #{tradeType,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_account = #{createAccount,jdbcType=VARCHAR},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        modify_account = #{modifyAccount,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update p_org_withdraw_apply
        <set >
            <if test="orgId != null" >
                org_id = #{orgId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="tradeType != null" >
                trade_type = #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createAccount != null" >
                create_account = #{createAccount,jdbcType=VARCHAR},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyAccount != null" >
                modify_account = #{modifyAccount,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update p_org_withdraw_apply
        set org_id = #{orgId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        amount = #{amount,jdbcType=DECIMAL},
        status = #{status,jdbcType=INTEGER},
        trade_type = #{tradeType,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_account = #{createAccount,jdbcType=VARCHAR},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        modify_account = #{modifyAccount,jdbcType=VARCHAR}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from p_org_withdraw_apply
        ${sqlSegment}
    </select>

</mapper>