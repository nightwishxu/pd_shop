<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.PawnContinueMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.PawnContinue" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="pawn_id" property="pawnId" jdbcType="INTEGER" />
        <result column="pawn_ticket_code" property="pawnTicketCode" jdbcType="VARCHAR" />
        <result column="pawn_last_end_time" property="pawnLastEndTime" jdbcType="DATE" />
        <result column="pawn_end_time" property="pawnEndTime" jdbcType="DATE" />
        <result column="pawn_month" property="pawnMonth" jdbcType="TINYINT" />
        <result column="pawn_money" property="pawnMoney" jdbcType="DECIMAL" />
        <result column="pawn_interest" property="pawnInterest" jdbcType="DECIMAL" />
        <result column="pawn_overdue" property="pawnOverdue" jdbcType="DECIMAL" />
        <result column="platform_money" property="platformMoney" jdbcType="DECIMAL" />
        <result column="state" property="state" jdbcType="TINYINT" />
        <result column="platform_state" property="platformState" jdbcType="TINYINT" />
        <result column="pay_ticket" property="payTicket" jdbcType="VARCHAR" />
        <result column="pawn_ticket" property="pawnTicket" jdbcType="VARCHAR" />
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_bank" property="userBank" jdbcType="VARCHAR" />
        <result column="user_bank_card" property="userBankCard" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
        <result column="project_code" property="projectCode" jdbcType="VARCHAR" />
        <result column="user_status" property="userStatus" jdbcType="INTEGER" />
        <result column="org_status" property="orgStatus" jdbcType="INTEGER" />
        <result column="continue_pawn_ticket_code" property="continuePawnTicketCode" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,pawn_id,pawn_ticket_code,pawn_last_end_time,pawn_end_time,pawn_month,pawn_money,pawn_interest,pawn_overdue,platform_money,state,platform_state,pay_ticket,pawn_ticket,pay_time,user_name,user_bank,user_bank_card,create_time,modify_time,contract_id,project_code,user_status,org_status,continue_pawn_ticket_code
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from p_pawn_continue
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from p_pawn_continue
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from p_pawn_continue
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from p_pawn_continue
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into p_pawn_continue (pawn_id,pawn_ticket_code,
        pawn_last_end_time,pawn_end_time,pawn_month,
        pawn_money,pawn_interest,pawn_overdue,
        platform_money,state,platform_state,
        pay_ticket,pawn_ticket,pay_time,
        user_name,user_bank,user_bank_card,
        create_time,modify_time,contract_id,
        project_code,user_status,org_status,
        continue_pawn_ticket_code
        )
        values (#{pawnId,jdbcType=INTEGER},#{pawnTicketCode,jdbcType=VARCHAR},
        #{pawnLastEndTime,jdbcType=DATE},#{pawnEndTime,jdbcType=DATE},#{pawnMonth,jdbcType=TINYINT},
        #{pawnMoney,jdbcType=DECIMAL},#{pawnInterest,jdbcType=DECIMAL},#{pawnOverdue,jdbcType=DECIMAL},
        #{platformMoney,jdbcType=DECIMAL},#{state,jdbcType=TINYINT},#{platformState,jdbcType=TINYINT},
        #{payTicket,jdbcType=VARCHAR},#{pawnTicket,jdbcType=VARCHAR},#{payTime,jdbcType=TIMESTAMP},
        #{userName,jdbcType=VARCHAR},#{userBank,jdbcType=VARCHAR},#{userBankCard,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},#{modifyTime,jdbcType=TIMESTAMP},#{contractId,jdbcType=VARCHAR},
        #{projectCode,jdbcType=VARCHAR},#{userStatus,jdbcType=INTEGER},#{orgStatus,jdbcType=INTEGER},
        #{continuePawnTicketCode,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into p_pawn_continue
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="pawnId != null" >
                pawn_id,
            </if>
            <if test="pawnTicketCode != null" >
                pawn_ticket_code,
            </if>
            <if test="pawnLastEndTime != null" >
                pawn_last_end_time,
            </if>
            <if test="pawnEndTime != null" >
                pawn_end_time,
            </if>
            <if test="pawnMonth != null" >
                pawn_month,
            </if>
            <if test="pawnMoney != null" >
                pawn_money,
            </if>
            <if test="pawnInterest != null" >
                pawn_interest,
            </if>
            <if test="pawnOverdue != null" >
                pawn_overdue,
            </if>
            <if test="platformMoney != null" >
                platform_money,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="platformState != null" >
                platform_state,
            </if>
            <if test="payTicket != null" >
                pay_ticket,
            </if>
            <if test="pawnTicket != null" >
                pawn_ticket,
            </if>
            <if test="payTime != null" >
                pay_time,
            </if>
            <if test="userName != null" >
                user_name,
            </if>
            <if test="userBank != null" >
                user_bank,
            </if>
            <if test="userBankCard != null" >
                user_bank_card,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="contractId != null" >
                contract_id,
            </if>
            <if test="projectCode != null" >
                project_code,
            </if>
            <if test="userStatus != null" >
                user_status,
            </if>
            <if test="orgStatus != null" >
                org_status,
            </if>
            <if test="continuePawnTicketCode != null" >
                continue_pawn_ticket_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="pawnId != null" >
                #{pawnId,jdbcType=INTEGER},
            </if>
            <if test="pawnTicketCode != null" >
                #{pawnTicketCode,jdbcType=VARCHAR},
            </if>
            <if test="pawnLastEndTime != null" >
                #{pawnLastEndTime,jdbcType=DATE},
            </if>
            <if test="pawnEndTime != null" >
                #{pawnEndTime,jdbcType=DATE},
            </if>
            <if test="pawnMonth != null" >
                #{pawnMonth,jdbcType=TINYINT},
            </if>
            <if test="pawnMoney != null" >
                #{pawnMoney,jdbcType=DECIMAL},
            </if>
            <if test="pawnInterest != null" >
                #{pawnInterest,jdbcType=DECIMAL},
            </if>
            <if test="pawnOverdue != null" >
                #{pawnOverdue,jdbcType=DECIMAL},
            </if>
            <if test="platformMoney != null" >
                #{platformMoney,jdbcType=DECIMAL},
            </if>
            <if test="state != null" >
                #{state,jdbcType=TINYINT},
            </if>
            <if test="platformState != null" >
                #{platformState,jdbcType=TINYINT},
            </if>
            <if test="payTicket != null" >
                #{payTicket,jdbcType=VARCHAR},
            </if>
            <if test="pawnTicket != null" >
                #{pawnTicket,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null" >
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userBank != null" >
                #{userBank,jdbcType=VARCHAR},
            </if>
            <if test="userBankCard != null" >
                #{userBankCard,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contractId != null" >
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="projectCode != null" >
                #{projectCode,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null" >
                #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="orgStatus != null" >
                #{orgStatus,jdbcType=INTEGER},
            </if>
            <if test="continuePawnTicketCode != null" >
                #{continuePawnTicketCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from p_pawn_continue
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update p_pawn_continue
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pawnId != null" >
                pawn_id = #{record.pawnId,jdbcType=INTEGER},
            </if>
            <if test="record.pawnTicketCode != null" >
                pawn_ticket_code = #{record.pawnTicketCode,jdbcType=VARCHAR},
            </if>
            <if test="record.pawnLastEndTime != null" >
                pawn_last_end_time = #{record.pawnLastEndTime,jdbcType=DATE},
            </if>
            <if test="record.pawnEndTime != null" >
                pawn_end_time = #{record.pawnEndTime,jdbcType=DATE},
            </if>
            <if test="record.pawnMonth != null" >
                pawn_month = #{record.pawnMonth,jdbcType=TINYINT},
            </if>
            <if test="record.pawnMoney != null" >
                pawn_money = #{record.pawnMoney,jdbcType=DECIMAL},
            </if>
            <if test="record.pawnInterest != null" >
                pawn_interest = #{record.pawnInterest,jdbcType=DECIMAL},
            </if>
            <if test="record.pawnOverdue != null" >
                pawn_overdue = #{record.pawnOverdue,jdbcType=DECIMAL},
            </if>
            <if test="record.platformMoney != null" >
                platform_money = #{record.platformMoney,jdbcType=DECIMAL},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.platformState != null" >
                platform_state = #{record.platformState,jdbcType=TINYINT},
            </if>
            <if test="record.payTicket != null" >
                pay_ticket = #{record.payTicket,jdbcType=VARCHAR},
            </if>
            <if test="record.pawnTicket != null" >
                pawn_ticket = #{record.pawnTicket,jdbcType=VARCHAR},
            </if>
            <if test="record.payTime != null" >
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userName != null" >
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userBank != null" >
                user_bank = #{record.userBank,jdbcType=VARCHAR},
            </if>
            <if test="record.userBankCard != null" >
                user_bank_card = #{record.userBankCard,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null" >
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.contractId != null" >
                contract_id = #{record.contractId,jdbcType=VARCHAR},
            </if>
            <if test="record.projectCode != null" >
                project_code = #{record.projectCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userStatus != null" >
                user_status = #{record.userStatus,jdbcType=INTEGER},
            </if>
            <if test="record.orgStatus != null" >
                org_status = #{record.orgStatus,jdbcType=INTEGER},
            </if>
            <if test="record.continuePawnTicketCode != null" >
                continue_pawn_ticket_code = #{record.continuePawnTicketCode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update p_pawn_continue
        set id = #{id,jdbcType=INTEGER},
        pawn_id = #{pawnId,jdbcType=INTEGER},
        pawn_ticket_code = #{pawnTicketCode,jdbcType=VARCHAR},
        pawn_last_end_time = #{pawnLastEndTime,jdbcType=DATE},
        pawn_end_time = #{pawnEndTime,jdbcType=DATE},
        pawn_month = #{pawnMonth,jdbcType=TINYINT},
        pawn_money = #{pawnMoney,jdbcType=DECIMAL},
        pawn_interest = #{pawnInterest,jdbcType=DECIMAL},
        pawn_overdue = #{pawnOverdue,jdbcType=DECIMAL},
        platform_money = #{platformMoney,jdbcType=DECIMAL},
        state = #{state,jdbcType=TINYINT},
        platform_state = #{platformState,jdbcType=TINYINT},
        pay_ticket = #{payTicket,jdbcType=VARCHAR},
        pawn_ticket = #{pawnTicket,jdbcType=VARCHAR},
        pay_time = #{payTime,jdbcType=TIMESTAMP},
        user_name = #{userName,jdbcType=VARCHAR},
        user_bank = #{userBank,jdbcType=VARCHAR},
        user_bank_card = #{userBankCard,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        contract_id = #{contractId,jdbcType=VARCHAR},
        project_code = #{projectCode,jdbcType=VARCHAR},
        user_status = #{userStatus,jdbcType=INTEGER},
        org_status = #{orgStatus,jdbcType=INTEGER},
        continue_pawn_ticket_code = #{continuePawnTicketCode,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update p_pawn_continue
        <set >
            <if test="pawnId != null" >
                pawn_id = #{pawnId,jdbcType=INTEGER},
            </if>
            <if test="pawnTicketCode != null" >
                pawn_ticket_code = #{pawnTicketCode,jdbcType=VARCHAR},
            </if>
            <if test="pawnLastEndTime != null" >
                pawn_last_end_time = #{pawnLastEndTime,jdbcType=DATE},
            </if>
            <if test="pawnEndTime != null" >
                pawn_end_time = #{pawnEndTime,jdbcType=DATE},
            </if>
            <if test="pawnMonth != null" >
                pawn_month = #{pawnMonth,jdbcType=TINYINT},
            </if>
            <if test="pawnMoney != null" >
                pawn_money = #{pawnMoney,jdbcType=DECIMAL},
            </if>
            <if test="pawnInterest != null" >
                pawn_interest = #{pawnInterest,jdbcType=DECIMAL},
            </if>
            <if test="pawnOverdue != null" >
                pawn_overdue = #{pawnOverdue,jdbcType=DECIMAL},
            </if>
            <if test="platformMoney != null" >
                platform_money = #{platformMoney,jdbcType=DECIMAL},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="platformState != null" >
                platform_state = #{platformState,jdbcType=TINYINT},
            </if>
            <if test="payTicket != null" >
                pay_ticket = #{payTicket,jdbcType=VARCHAR},
            </if>
            <if test="pawnTicket != null" >
                pawn_ticket = #{pawnTicket,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null" >
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userName != null" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userBank != null" >
                user_bank = #{userBank,jdbcType=VARCHAR},
            </if>
            <if test="userBankCard != null" >
                user_bank_card = #{userBankCard,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contractId != null" >
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="projectCode != null" >
                project_code = #{projectCode,jdbcType=VARCHAR},
            </if>
            <if test="userStatus != null" >
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="orgStatus != null" >
                org_status = #{orgStatus,jdbcType=INTEGER},
            </if>
            <if test="continuePawnTicketCode != null" >
                continue_pawn_ticket_code = #{continuePawnTicketCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update p_pawn_continue
        set pawn_id = #{pawnId,jdbcType=INTEGER},
        pawn_ticket_code = #{pawnTicketCode,jdbcType=VARCHAR},
        pawn_last_end_time = #{pawnLastEndTime,jdbcType=DATE},
        pawn_end_time = #{pawnEndTime,jdbcType=DATE},
        pawn_month = #{pawnMonth,jdbcType=TINYINT},
        pawn_money = #{pawnMoney,jdbcType=DECIMAL},
        pawn_interest = #{pawnInterest,jdbcType=DECIMAL},
        pawn_overdue = #{pawnOverdue,jdbcType=DECIMAL},
        platform_money = #{platformMoney,jdbcType=DECIMAL},
        state = #{state,jdbcType=TINYINT},
        platform_state = #{platformState,jdbcType=TINYINT},
        pay_ticket = #{payTicket,jdbcType=VARCHAR},
        pawn_ticket = #{pawnTicket,jdbcType=VARCHAR},
        pay_time = #{payTime,jdbcType=TIMESTAMP},
        user_name = #{userName,jdbcType=VARCHAR},
        user_bank = #{userBank,jdbcType=VARCHAR},
        user_bank_card = #{userBankCard,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        contract_id = #{contractId,jdbcType=VARCHAR},
        project_code = #{projectCode,jdbcType=VARCHAR},
        user_status = #{userStatus,jdbcType=INTEGER},
        org_status = #{orgStatus,jdbcType=INTEGER},
        continue_pawn_ticket_code = #{continuePawnTicketCode,jdbcType=VARCHAR}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from p_pawn_continue
        ${sqlSegment}
    </select>

</mapper>