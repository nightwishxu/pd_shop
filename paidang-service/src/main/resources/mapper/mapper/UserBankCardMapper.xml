<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.UserBankCardMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.UserBankCard" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="bank_logo" property="bankLogo" jdbcType="VARCHAR" />
        <result column="bank_card_no" property="bankCardNo" jdbcType="VARCHAR" />
        <result column="bank_card_name" property="bankCardName" jdbcType="VARCHAR" />
        <result column="bank_card_user_name" property="bankCardUserName" jdbcType="VARCHAR" />
        <result column="bank_card_phone" property="bankCardPhone" jdbcType="VARCHAR" />
        <result column="bank_card_id_card" property="bankCardIdCard" jdbcType="VARCHAR" />
        <result column="bank_card_type" property="bankCardType" jdbcType="TINYINT" />
        <result column="is_default" property="isDefault" jdbcType="TINYINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,user_id,bank_logo,bank_card_no,bank_card_name,bank_card_user_name,bank_card_phone,bank_card_id_card,bank_card_type,is_default,create_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from p_user_bank_card
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from p_user_bank_card
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from p_user_bank_card
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from p_user_bank_card
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into p_user_bank_card (user_id,bank_logo,
        bank_card_no,bank_card_name,bank_card_user_name,
        bank_card_phone,bank_card_id_card,bank_card_type,
        is_default,create_time
        )
        values (#{userId,jdbcType=INTEGER},#{bankLogo,jdbcType=VARCHAR},
        #{bankCardNo,jdbcType=VARCHAR},#{bankCardName,jdbcType=VARCHAR},#{bankCardUserName,jdbcType=VARCHAR},
        #{bankCardPhone,jdbcType=VARCHAR},#{bankCardIdCard,jdbcType=VARCHAR},#{bankCardType,jdbcType=TINYINT},
        #{isDefault,jdbcType=TINYINT},#{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into p_user_bank_card
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                user_id,
            </if>
            <if test="bankLogo != null" >
                bank_logo,
            </if>
            <if test="bankCardNo != null" >
                bank_card_no,
            </if>
            <if test="bankCardName != null" >
                bank_card_name,
            </if>
            <if test="bankCardUserName != null" >
                bank_card_user_name,
            </if>
            <if test="bankCardPhone != null" >
                bank_card_phone,
            </if>
            <if test="bankCardIdCard != null" >
                bank_card_id_card,
            </if>
            <if test="bankCardType != null" >
                bank_card_type,
            </if>
            <if test="isDefault != null" >
                is_default,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="bankLogo != null" >
                #{bankLogo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null" >
                #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardName != null" >
                #{bankCardName,jdbcType=VARCHAR},
            </if>
            <if test="bankCardUserName != null" >
                #{bankCardUserName,jdbcType=VARCHAR},
            </if>
            <if test="bankCardPhone != null" >
                #{bankCardPhone,jdbcType=VARCHAR},
            </if>
            <if test="bankCardIdCard != null" >
                #{bankCardIdCard,jdbcType=VARCHAR},
            </if>
            <if test="bankCardType != null" >
                #{bankCardType,jdbcType=TINYINT},
            </if>
            <if test="isDefault != null" >
                #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from p_user_bank_card
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update p_user_bank_card
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.bankLogo != null" >
                bank_logo = #{record.bankLogo,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardNo != null" >
                bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardName != null" >
                bank_card_name = #{record.bankCardName,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardUserName != null" >
                bank_card_user_name = #{record.bankCardUserName,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardPhone != null" >
                bank_card_phone = #{record.bankCardPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardIdCard != null" >
                bank_card_id_card = #{record.bankCardIdCard,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardType != null" >
                bank_card_type = #{record.bankCardType,jdbcType=TINYINT},
            </if>
            <if test="record.isDefault != null" >
                is_default = #{record.isDefault,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update p_user_bank_card
        set id = #{id,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        bank_logo = #{bankLogo,jdbcType=VARCHAR},
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
        bank_card_name = #{bankCardName,jdbcType=VARCHAR},
        bank_card_user_name = #{bankCardUserName,jdbcType=VARCHAR},
        bank_card_phone = #{bankCardPhone,jdbcType=VARCHAR},
        bank_card_id_card = #{bankCardIdCard,jdbcType=VARCHAR},
        bank_card_type = #{bankCardType,jdbcType=TINYINT},
        is_default = #{isDefault,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update p_user_bank_card
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="bankLogo != null" >
                bank_logo = #{bankLogo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null" >
                bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="bankCardName != null" >
                bank_card_name = #{bankCardName,jdbcType=VARCHAR},
            </if>
            <if test="bankCardUserName != null" >
                bank_card_user_name = #{bankCardUserName,jdbcType=VARCHAR},
            </if>
            <if test="bankCardPhone != null" >
                bank_card_phone = #{bankCardPhone,jdbcType=VARCHAR},
            </if>
            <if test="bankCardIdCard != null" >
                bank_card_id_card = #{bankCardIdCard,jdbcType=VARCHAR},
            </if>
            <if test="bankCardType != null" >
                bank_card_type = #{bankCardType,jdbcType=TINYINT},
            </if>
            <if test="isDefault != null" >
                is_default = #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update p_user_bank_card
        set user_id = #{userId,jdbcType=INTEGER},
        bank_logo = #{bankLogo,jdbcType=VARCHAR},
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
        bank_card_name = #{bankCardName,jdbcType=VARCHAR},
        bank_card_user_name = #{bankCardUserName,jdbcType=VARCHAR},
        bank_card_phone = #{bankCardPhone,jdbcType=VARCHAR},
        bank_card_id_card = #{bankCardIdCard,jdbcType=VARCHAR},
        bank_card_type = #{bankCardType,jdbcType=TINYINT},
        is_default = #{isDefault,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

</mapper>