<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.AuthEnterpriseMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.AuthEnterprise" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="store_name" property="storeName" jdbcType="VARCHAR" />
        <result column="logo" property="logo" jdbcType="VARCHAR" />
        <result column="store_introduce" property="storeIntroduce" jdbcType="VARCHAR" />
        <result column="enterprise_name" property="enterpriseName" jdbcType="VARCHAR" />
        <result column="legal_person_name" property="legalPersonName" jdbcType="VARCHAR" />
        <result column="legal_person_card" property="legalPersonCard" jdbcType="VARCHAR" />
        <result column="business_license_photo" property="businessLicensePhoto" jdbcType="VARCHAR" />
        <result column="legal_person_card_front" property="legalPersonCardFront" jdbcType="VARCHAR" />
        <result column="legal_person_card_back" property="legalPersonCardBack" jdbcType="VARCHAR" />
        <result column="create_user" property="createUser" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="CHAR" />
        <result column="refuse_info" property="refuseInfo" jdbcType="VARCHAR" />
        <result column="org_id" property="orgId" jdbcType="INTEGER" />
        <result column="pawn_exequatur" property="pawnExequatur" jdbcType="VARCHAR" />
        <result column="other_file" property="otherFile" jdbcType="VARCHAR" />
        <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,store_name,logo,store_introduce,enterprise_name,legal_person_name,legal_person_card,business_license_photo,legal_person_card_front,legal_person_card_back,create_user,create_time,state,refuse_info,org_id,pawn_exequatur,other_file,business_license
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from b_auth_enterprise
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from b_auth_enterprise
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from b_auth_enterprise
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from b_auth_enterprise
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into b_auth_enterprise (store_name,logo,
        store_introduce,enterprise_name,legal_person_name,
        legal_person_card,business_license_photo,legal_person_card_front,
        legal_person_card_back,create_user,create_time,
        state,refuse_info,org_id,
        pawn_exequatur,other_file,business_license
        )
        values (#{storeName,jdbcType=VARCHAR},#{logo,jdbcType=VARCHAR},
        #{storeIntroduce,jdbcType=VARCHAR},#{enterpriseName,jdbcType=VARCHAR},#{legalPersonName,jdbcType=VARCHAR},
        #{legalPersonCard,jdbcType=VARCHAR},#{businessLicensePhoto,jdbcType=VARCHAR},#{legalPersonCardFront,jdbcType=VARCHAR},
        #{legalPersonCardBack,jdbcType=VARCHAR},#{createUser,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},
        #{state,jdbcType=CHAR},#{refuseInfo,jdbcType=VARCHAR},#{orgId,jdbcType=INTEGER},
        #{pawnExequatur,jdbcType=VARCHAR},#{otherFile,jdbcType=VARCHAR},#{businessLicense,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into b_auth_enterprise
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="storeName != null" >
                store_name,
            </if>
            <if test="logo != null" >
                logo,
            </if>
            <if test="storeIntroduce != null" >
                store_introduce,
            </if>
            <if test="enterpriseName != null" >
                enterprise_name,
            </if>
            <if test="legalPersonName != null" >
                legal_person_name,
            </if>
            <if test="legalPersonCard != null" >
                legal_person_card,
            </if>
            <if test="businessLicensePhoto != null" >
                business_license_photo,
            </if>
            <if test="legalPersonCardFront != null" >
                legal_person_card_front,
            </if>
            <if test="legalPersonCardBack != null" >
                legal_person_card_back,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="refuseInfo != null" >
                refuse_info,
            </if>
            <if test="orgId != null" >
                org_id,
            </if>
            <if test="pawnExequatur != null" >
                pawn_exequatur,
            </if>
            <if test="otherFile != null" >
                other_file,
            </if>
            <if test="businessLicense != null" >
                business_license,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="storeName != null" >
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="logo != null" >
                #{logo,jdbcType=VARCHAR},
            </if>
            <if test="storeIntroduce != null" >
                #{storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="enterpriseName != null" >
                #{enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonName != null" >
                #{legalPersonName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCard != null" >
                #{legalPersonCard,jdbcType=VARCHAR},
            </if>
            <if test="businessLicensePhoto != null" >
                #{businessLicensePhoto,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCardFront != null" >
                #{legalPersonCardFront,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCardBack != null" >
                #{legalPersonCardBack,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                #{state,jdbcType=CHAR},
            </if>
            <if test="refuseInfo != null" >
                #{refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null" >
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="pawnExequatur != null" >
                #{pawnExequatur,jdbcType=VARCHAR},
            </if>
            <if test="otherFile != null" >
                #{otherFile,jdbcType=VARCHAR},
            </if>
            <if test="businessLicense != null" >
                #{businessLicense,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from b_auth_enterprise
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update b_auth_enterprise
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.storeName != null" >
                store_name = #{record.storeName,jdbcType=VARCHAR},
            </if>
            <if test="record.logo != null" >
                logo = #{record.logo,jdbcType=VARCHAR},
            </if>
            <if test="record.storeIntroduce != null" >
                store_introduce = #{record.storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="record.enterpriseName != null" >
                enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="record.legalPersonName != null" >
                legal_person_name = #{record.legalPersonName,jdbcType=VARCHAR},
            </if>
            <if test="record.legalPersonCard != null" >
                legal_person_card = #{record.legalPersonCard,jdbcType=VARCHAR},
            </if>
            <if test="record.businessLicensePhoto != null" >
                business_license_photo = #{record.businessLicensePhoto,jdbcType=VARCHAR},
            </if>
            <if test="record.legalPersonCardFront != null" >
                legal_person_card_front = #{record.legalPersonCardFront,jdbcType=VARCHAR},
            </if>
            <if test="record.legalPersonCardBack != null" >
                legal_person_card_back = #{record.legalPersonCardBack,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null" >
                create_user = #{record.createUser,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=CHAR},
            </if>
            <if test="record.refuseInfo != null" >
                refuse_info = #{record.refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.orgId != null" >
                org_id = #{record.orgId,jdbcType=INTEGER},
            </if>
            <if test="record.pawnExequatur != null" >
                pawn_exequatur = #{record.pawnExequatur,jdbcType=VARCHAR},
            </if>
            <if test="record.otherFile != null" >
                other_file = #{record.otherFile,jdbcType=VARCHAR},
            </if>
            <if test="record.businessLicense != null" >
                business_license = #{record.businessLicense,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update b_auth_enterprise
        set id = #{id,jdbcType=INTEGER},
        store_name = #{storeName,jdbcType=VARCHAR},
        logo = #{logo,jdbcType=VARCHAR},
        store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
        legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
        legal_person_card = #{legalPersonCard,jdbcType=VARCHAR},
        business_license_photo = #{businessLicensePhoto,jdbcType=VARCHAR},
        legal_person_card_front = #{legalPersonCardFront,jdbcType=VARCHAR},
        legal_person_card_back = #{legalPersonCardBack,jdbcType=VARCHAR},
        create_user = #{createUser,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=CHAR},
        refuse_info = #{refuseInfo,jdbcType=VARCHAR},
        org_id = #{orgId,jdbcType=INTEGER},
        pawn_exequatur = #{pawnExequatur,jdbcType=VARCHAR},
        other_file = #{otherFile,jdbcType=VARCHAR},
        business_license = #{businessLicense,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update b_auth_enterprise
        <set >
            <if test="storeName != null" >
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="logo != null" >
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="storeIntroduce != null" >
                store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="enterpriseName != null" >
                enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonName != null" >
                legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCard != null" >
                legal_person_card = #{legalPersonCard,jdbcType=VARCHAR},
            </if>
            <if test="businessLicensePhoto != null" >
                business_license_photo = #{businessLicensePhoto,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCardFront != null" >
                legal_person_card_front = #{legalPersonCardFront,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCardBack != null" >
                legal_person_card_back = #{legalPersonCardBack,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=CHAR},
            </if>
            <if test="refuseInfo != null" >
                refuse_info = #{refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null" >
                org_id = #{orgId,jdbcType=INTEGER},
            </if>
            <if test="pawnExequatur != null" >
                pawn_exequatur = #{pawnExequatur,jdbcType=VARCHAR},
            </if>
            <if test="otherFile != null" >
                other_file = #{otherFile,jdbcType=VARCHAR},
            </if>
            <if test="businessLicense != null" >
                business_license = #{businessLicense,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update b_auth_enterprise
        set store_name = #{storeName,jdbcType=VARCHAR},
        logo = #{logo,jdbcType=VARCHAR},
        store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
        legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
        legal_person_card = #{legalPersonCard,jdbcType=VARCHAR},
        business_license_photo = #{businessLicensePhoto,jdbcType=VARCHAR},
        legal_person_card_front = #{legalPersonCardFront,jdbcType=VARCHAR},
        legal_person_card_back = #{legalPersonCardBack,jdbcType=VARCHAR},
        create_user = #{createUser,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=CHAR},
        refuse_info = #{refuseInfo,jdbcType=VARCHAR},
        org_id = #{orgId,jdbcType=INTEGER},
        pawn_exequatur = #{pawnExequatur,jdbcType=VARCHAR},
        other_file = #{otherFile,jdbcType=VARCHAR},
        business_license = #{businessLicense,jdbcType=VARCHAR}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from b_auth_enterprise
        ${sqlSegment}
    </select>

</mapper>