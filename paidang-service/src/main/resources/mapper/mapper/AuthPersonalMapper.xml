<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.AuthPersonalMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.AuthPersonal" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="logo" property="logo" jdbcType="VARCHAR" />
        <result column="store_name" property="storeName" jdbcType="VARCHAR" />
        <result column="store_introduce" property="storeIntroduce" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="id_card" property="idCard" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="id_card_front" property="idCardFront" jdbcType="VARCHAR" />
        <result column="id_card_back" property="idCardBack" jdbcType="VARCHAR" />
        <result column="create_user" property="createUser" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="CHAR" />
        <result column="refuse_info" property="refuseInfo" jdbcType="VARCHAR" />
        <result column="org_id" property="orgId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,logo,store_name,store_introduce,name,id_card,phone,id_card_front,id_card_back,create_user,create_time,state,refuse_info,org_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from b_auth_personal
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from b_auth_personal
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from b_auth_personal
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from b_auth_personal
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into b_auth_personal (logo,store_name,
        store_introduce,name,id_card,
        phone,id_card_front,id_card_back,
        create_user,create_time,state,
        refuse_info,org_id
        )
        values (#{logo,jdbcType=VARCHAR},#{storeName,jdbcType=VARCHAR},
        #{storeIntroduce,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{idCard,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},#{idCardFront,jdbcType=VARCHAR},#{idCardBack,jdbcType=VARCHAR},
        #{createUser,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{state,jdbcType=CHAR},
        #{refuseInfo,jdbcType=VARCHAR},#{orgId,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into b_auth_personal
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="logo != null" >
                logo,
            </if>
            <if test="storeName != null" >
                store_name,
            </if>
            <if test="storeIntroduce != null" >
                store_introduce,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="idCard != null" >
                id_card,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="idCardFront != null" >
                id_card_front,
            </if>
            <if test="idCardBack != null" >
                id_card_back,
            </if>
            <if test="createUser != null" >
                create_user,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="refuseInfo != null" >
                refuse_info,
            </if>
            <if test="orgId != null" >
                org_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="logo != null" >
                #{logo,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null" >
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="storeIntroduce != null" >
                #{storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null" >
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCardFront != null" >
                #{idCardFront,jdbcType=VARCHAR},
            </if>
            <if test="idCardBack != null" >
                #{idCardBack,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                #{state,jdbcType=CHAR},
            </if>
            <if test="refuseInfo != null" >
                #{refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null" >
                #{orgId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from b_auth_personal
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update b_auth_personal
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.logo != null" >
                logo = #{record.logo,jdbcType=VARCHAR},
            </if>
            <if test="record.storeName != null" >
                store_name = #{record.storeName,jdbcType=VARCHAR},
            </if>
            <if test="record.storeIntroduce != null" >
                store_introduce = #{record.storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.idCard != null" >
                id_card = #{record.idCard,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null" >
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.idCardFront != null" >
                id_card_front = #{record.idCardFront,jdbcType=VARCHAR},
            </if>
            <if test="record.idCardBack != null" >
                id_card_back = #{record.idCardBack,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null" >
                create_user = #{record.createUser,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=CHAR},
            </if>
            <if test="record.refuseInfo != null" >
                refuse_info = #{record.refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.orgId != null" >
                org_id = #{record.orgId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update b_auth_personal
        set id = #{id,jdbcType=INTEGER},
        logo = #{logo,jdbcType=VARCHAR},
        store_name = #{storeName,jdbcType=VARCHAR},
        store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        id_card_front = #{idCardFront,jdbcType=VARCHAR},
        id_card_back = #{idCardBack,jdbcType=VARCHAR},
        create_user = #{createUser,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=CHAR},
        refuse_info = #{refuseInfo,jdbcType=VARCHAR},
        org_id = #{orgId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update b_auth_personal
        <set >
            <if test="logo != null" >
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null" >
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="storeIntroduce != null" >
                store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null" >
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idCardFront != null" >
                id_card_front = #{idCardFront,jdbcType=VARCHAR},
            </if>
            <if test="idCardBack != null" >
                id_card_back = #{idCardBack,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=CHAR},
            </if>
            <if test="refuseInfo != null" >
                refuse_info = #{refuseInfo,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null" >
                org_id = #{orgId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update b_auth_personal
        set logo = #{logo,jdbcType=VARCHAR},
        store_name = #{storeName,jdbcType=VARCHAR},
        store_introduce = #{storeIntroduce,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        id_card_front = #{idCardFront,jdbcType=VARCHAR},
        id_card_back = #{idCardBack,jdbcType=VARCHAR},
        create_user = #{createUser,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=CHAR},
        refuse_info = #{refuseInfo,jdbcType=VARCHAR},
        org_id = #{orgId,jdbcType=INTEGER}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from b_auth_personal
        ${sqlSegment}
    </select>

</mapper>