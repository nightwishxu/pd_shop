<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.ArticleCommentReplyMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.ArticleCommentReply" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="comment_id" property="commentId" jdbcType="INTEGER" />
        <result column="reply_type" property="replyType" jdbcType="INTEGER" />
        <result column="reply_id" property="replyId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="to_uid" property="toUid" jdbcType="INTEGER" />
        <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
        <result column="from_thumb_img" property="fromThumbImg" jdbcType="VARCHAR" />
        <result column="from_nickname" property="fromNickname" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="to_nickname" property="toNickname" jdbcType="VARCHAR" />
        <result column="is_show" property="isShow" jdbcType="INTEGER" />
        <result column="is_author" property="isAuthor" jdbcType="INTEGER" />
        <result column="like_num" property="likeNum" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="is_report" property="isReport" jdbcType="INTEGER" />
        <result column="reply_num" property="replyNum" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,comment_id,reply_type,reply_id,content,to_uid,from_uid,from_thumb_img,from_nickname,create_time,to_nickname,is_show,is_author,like_num,status,is_report,reply_num
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_article_comment_reply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from t_article_comment_reply
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from t_article_comment_reply
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from t_article_comment_reply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into t_article_comment_reply (comment_id,reply_type,
        reply_id,content,to_uid,
        from_uid,from_thumb_img,from_nickname,
        create_time,to_nickname,is_show,
        is_author,like_num,status,
        is_report,reply_num
        )
        values (#{commentId,jdbcType=INTEGER},#{replyType,jdbcType=INTEGER},
        #{replyId,jdbcType=INTEGER},#{content,jdbcType=VARCHAR},#{toUid,jdbcType=INTEGER},
        #{fromUid,jdbcType=INTEGER},#{fromThumbImg,jdbcType=VARCHAR},#{fromNickname,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},#{toNickname,jdbcType=VARCHAR},#{isShow,jdbcType=INTEGER},
        #{isAuthor,jdbcType=INTEGER},#{likeNum,jdbcType=INTEGER},#{status,jdbcType=INTEGER},
        #{isReport,jdbcType=INTEGER},#{replyNum,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into t_article_comment_reply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="commentId != null" >
                comment_id,
            </if>
            <if test="replyType != null" >
                reply_type,
            </if>
            <if test="replyId != null" >
                reply_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="toUid != null" >
                to_uid,
            </if>
            <if test="fromUid != null" >
                from_uid,
            </if>
            <if test="fromThumbImg != null" >
                from_thumb_img,
            </if>
            <if test="fromNickname != null" >
                from_nickname,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="toNickname != null" >
                to_nickname,
            </if>
            <if test="isShow != null" >
                is_show,
            </if>
            <if test="isAuthor != null" >
                is_author,
            </if>
            <if test="likeNum != null" >
                like_num,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="isReport != null" >
                is_report,
            </if>
            <if test="replyNum != null" >
                reply_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="commentId != null" >
                #{commentId,jdbcType=INTEGER},
            </if>
            <if test="replyType != null" >
                #{replyType,jdbcType=INTEGER},
            </if>
            <if test="replyId != null" >
                #{replyId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="toUid != null" >
                #{toUid,jdbcType=INTEGER},
            </if>
            <if test="fromUid != null" >
                #{fromUid,jdbcType=INTEGER},
            </if>
            <if test="fromThumbImg != null" >
                #{fromThumbImg,jdbcType=VARCHAR},
            </if>
            <if test="fromNickname != null" >
                #{fromNickname,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="toNickname != null" >
                #{toNickname,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null" >
                #{isShow,jdbcType=INTEGER},
            </if>
            <if test="isAuthor != null" >
                #{isAuthor,jdbcType=INTEGER},
            </if>
            <if test="likeNum != null" >
                #{likeNum,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="isReport != null" >
                #{isReport,jdbcType=INTEGER},
            </if>
            <if test="replyNum != null" >
                #{replyNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from t_article_comment_reply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update t_article_comment_reply
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.commentId != null" >
                comment_id = #{record.commentId,jdbcType=INTEGER},
            </if>
            <if test="record.replyType != null" >
                reply_type = #{record.replyType,jdbcType=INTEGER},
            </if>
            <if test="record.replyId != null" >
                reply_id = #{record.replyId,jdbcType=INTEGER},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.toUid != null" >
                to_uid = #{record.toUid,jdbcType=INTEGER},
            </if>
            <if test="record.fromUid != null" >
                from_uid = #{record.fromUid,jdbcType=INTEGER},
            </if>
            <if test="record.fromThumbImg != null" >
                from_thumb_img = #{record.fromThumbImg,jdbcType=VARCHAR},
            </if>
            <if test="record.fromNickname != null" >
                from_nickname = #{record.fromNickname,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.toNickname != null" >
                to_nickname = #{record.toNickname,jdbcType=VARCHAR},
            </if>
            <if test="record.isShow != null" >
                is_show = #{record.isShow,jdbcType=INTEGER},
            </if>
            <if test="record.isAuthor != null" >
                is_author = #{record.isAuthor,jdbcType=INTEGER},
            </if>
            <if test="record.likeNum != null" >
                like_num = #{record.likeNum,jdbcType=INTEGER},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.isReport != null" >
                is_report = #{record.isReport,jdbcType=INTEGER},
            </if>
            <if test="record.replyNum != null" >
                reply_num = #{record.replyNum,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update t_article_comment_reply
        set id = #{id,jdbcType=INTEGER},
        comment_id = #{commentId,jdbcType=INTEGER},
        reply_type = #{replyType,jdbcType=INTEGER},
        reply_id = #{replyId,jdbcType=INTEGER},
        content = #{content,jdbcType=VARCHAR},
        to_uid = #{toUid,jdbcType=INTEGER},
        from_uid = #{fromUid,jdbcType=INTEGER},
        from_thumb_img = #{fromThumbImg,jdbcType=VARCHAR},
        from_nickname = #{fromNickname,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        to_nickname = #{toNickname,jdbcType=VARCHAR},
        is_show = #{isShow,jdbcType=INTEGER},
        is_author = #{isAuthor,jdbcType=INTEGER},
        like_num = #{likeNum,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        is_report = #{isReport,jdbcType=INTEGER},
        reply_num = #{replyNum,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update t_article_comment_reply
        <set >
            <if test="commentId != null" >
                comment_id = #{commentId,jdbcType=INTEGER},
            </if>
            <if test="replyType != null" >
                reply_type = #{replyType,jdbcType=INTEGER},
            </if>
            <if test="replyId != null" >
                reply_id = #{replyId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="toUid != null" >
                to_uid = #{toUid,jdbcType=INTEGER},
            </if>
            <if test="fromUid != null" >
                from_uid = #{fromUid,jdbcType=INTEGER},
            </if>
            <if test="fromThumbImg != null" >
                from_thumb_img = #{fromThumbImg,jdbcType=VARCHAR},
            </if>
            <if test="fromNickname != null" >
                from_nickname = #{fromNickname,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="toNickname != null" >
                to_nickname = #{toNickname,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null" >
                is_show = #{isShow,jdbcType=INTEGER},
            </if>
            <if test="isAuthor != null" >
                is_author = #{isAuthor,jdbcType=INTEGER},
            </if>
            <if test="likeNum != null" >
                like_num = #{likeNum,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="isReport != null" >
                is_report = #{isReport,jdbcType=INTEGER},
            </if>
            <if test="replyNum != null" >
                reply_num = #{replyNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update t_article_comment_reply
        set comment_id = #{commentId,jdbcType=INTEGER},
        reply_type = #{replyType,jdbcType=INTEGER},
        reply_id = #{replyId,jdbcType=INTEGER},
        content = #{content,jdbcType=VARCHAR},
        to_uid = #{toUid,jdbcType=INTEGER},
        from_uid = #{fromUid,jdbcType=INTEGER},
        from_thumb_img = #{fromThumbImg,jdbcType=VARCHAR},
        from_nickname = #{fromNickname,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        to_nickname = #{toNickname,jdbcType=VARCHAR},
        is_show = #{isShow,jdbcType=INTEGER},
        is_author = #{isAuthor,jdbcType=INTEGER},
        like_num = #{likeNum,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        is_report = #{isReport,jdbcType=INTEGER},
        reply_num = #{replyNum,jdbcType=INTEGER}
        where id = #{id}
    </update>

    <select id="selectByWrapper" resultMap="BaseResultMap" >
        select
        <choose >
            <when test="sqlSelect != null" >
                ${sqlSelect}
            </when>
            <otherwise >
                <include refid="Base_Column_List" />
            </otherwise>
        </choose>
        from t_article_comment_reply
        ${sqlSegment}
    </select>

</mapper>