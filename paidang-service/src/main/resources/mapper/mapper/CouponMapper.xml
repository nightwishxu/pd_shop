<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.paidang.dao.CouponMapper" >
    <resultMap id="BaseResultMap" type="com.paidang.dao.model.Coupon" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="full" property="full" jdbcType="DECIMAL" />
        <result column="value" property="value" jdbcType="DECIMAL" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="days" property="days" jdbcType="INTEGER" />
        <result column="fid" property="fid" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,full,value,create_time,modify_time,days,fid,type
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from p_coupon
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from p_coupon
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from p_coupon
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from p_coupon
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into p_coupon (full,value,
        create_time,modify_time,days,
        fid,type
        )
        values (#{full,jdbcType=DECIMAL},#{value,jdbcType=DECIMAL},
        #{createTime,jdbcType=TIMESTAMP},#{modifyTime,jdbcType=TIMESTAMP},#{days,jdbcType=INTEGER},
        #{fid,jdbcType=INTEGER},#{type,jdbcType=TINYINT}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into p_coupon
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="full != null" >
                full,
            </if>
            <if test="value != null" >
                value,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="days != null" >
                days,
            </if>
            <if test="fid != null" >
                fid,
            </if>
            <if test="type != null" >
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="full != null" >
                #{full,jdbcType=DECIMAL},
            </if>
            <if test="value != null" >
                #{value,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="days != null" >
                #{days,jdbcType=INTEGER},
            </if>
            <if test="fid != null" >
                #{fid,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from p_coupon
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update p_coupon
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.full != null" >
                full = #{record.full,jdbcType=DECIMAL},
            </if>
            <if test="record.value != null" >
                value = #{record.value,jdbcType=DECIMAL},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null" >
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.days != null" >
                days = #{record.days,jdbcType=INTEGER},
            </if>
            <if test="record.fid != null" >
                fid = #{record.fid,jdbcType=INTEGER},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update p_coupon
        set id = #{id,jdbcType=INTEGER},
        full = #{full,jdbcType=DECIMAL},
        value = #{value,jdbcType=DECIMAL},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        days = #{days,jdbcType=INTEGER},
        fid = #{fid,jdbcType=INTEGER},
        type = #{type,jdbcType=TINYINT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update p_coupon
        <set >
            <if test="full != null" >
                full = #{full,jdbcType=DECIMAL},
            </if>
            <if test="value != null" >
                value = #{value,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="days != null" >
                days = #{days,jdbcType=INTEGER},
            </if>
            <if test="fid != null" >
                fid = #{fid,jdbcType=INTEGER},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update p_coupon
        set full = #{full,jdbcType=DECIMAL},
        value = #{value,jdbcType=DECIMAL},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        days = #{days,jdbcType=INTEGER},
        fid = #{fid,jdbcType=INTEGER},
        type = #{type,jdbcType=TINYINT}
        where id = #{id}
    </update>

</mapper>